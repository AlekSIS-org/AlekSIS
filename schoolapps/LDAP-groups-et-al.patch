diff --git a/schoolapps/manage.py b/schoolapps/manage.py
index d450e49..bee7dd5 100755
--- a/schoolapps/manage.py
+++ b/schoolapps/manage.py
@@ -1,7 +1,9 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 import os
 import sys
 
+sys.path = ["/srv/sites/school-apps/env/lib/python3.5/site-packages/"] + sys.path
+
 if __name__ == "__main__":
     os.environ.setdefault("DJANGO_SETTINGS_MODULE", "schoolapps.settings")
     try:
@@ -11,5 +13,5 @@ if __name__ == "__main__":
             "Couldn't import Django. Are you sure it's installed and "
             "available on your PYTHONPATH environment variable? Did you "
             "forget to activate a virtual environment?"
-        ) from exc
+        )
     execute_from_command_line(sys.argv)
diff --git a/schoolapps/schoolapps/settings.py b/schoolapps/schoolapps/settings.py
index c05dba5..c1ba2d3 100755
--- a/schoolapps/schoolapps/settings.py
+++ b/schoolapps/schoolapps/settings.py
@@ -12,8 +12,8 @@ https://docs.djangoproject.com/en/2.0/ref/settings/
 
 import os
 import ldap
-from django_auth_ldap.config import LDAPSearch, GroupOfNamesType, LDAPGroupType
-from posixgrouptype import PosixGroupType
+from django_auth_ldap.config import LDAPSearch, PosixGroupType, GroupOfNamesType, LDAPGroupType
+#from posixgrouptype import PosixGroupType
 import logging
 from .secure_settings import *
 
@@ -27,6 +27,9 @@ BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
 # SECURITY WARNING: don't run with debug turned on in production!
 DEBUG = True
 
+# PDB debugger option
+POST_MORTEM = True
+
 ALLOWED_HOSTS = [
     'info.katharineum.de',
     '178.63.239.184',
@@ -37,6 +40,7 @@ ALLOWED_HOSTS = [
 # Application definition
 
 INSTALLED_APPS = [
+    'django_pdb',
     'dashboard.apps.DashboardConfig',
     'aub.apps.AubConfig',
     'untisconnect.apps.UntisconnectConfig',
@@ -58,6 +62,7 @@ MIDDLEWARE = [
     'django.contrib.auth.middleware.AuthenticationMiddleware',
     'django.contrib.messages.middleware.MessageMiddleware',
     'django.middleware.clickjacking.XFrameOptionsMiddleware',
+    'django_pdb.middleware.PdbMiddleware',
 ]
 
 ROOT_URLCONF = 'schoolapps.urls'
@@ -163,17 +168,17 @@ TIMETABLE_HEIGHT = 10
 # Baseline configuration.
 AUTH_LDAP_SERVER_URI = "ldap://127.0.0.1"
 AUTH_LDAP_USER_SEARCH = LDAPSearch("dc=skole,dc=skolelinux,dc=no",
-                                   ldap.SCOPE_SUBTREE, "(uid=%(user)s)")
+                                   ldap.SCOPE_SUBTREE, "(&(objectClass=posixAccount)(uid=%(user)s))")
 # or perhaps:
 # AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=users,dc=example,dc=com"
 
 # Set up the basic group parameters.
-AUTH_LDAP_GROUP_SEARCH = LDAPSearch("dc=skole,dc=skolelinux,dc=no,ou=SchoolManager,ou=group", ldap.SCOPE_SUBTREE,
-                                    "(objectClass=posixGroup)")
-# '(&(objectClass=*)(memberUid=%(user))')
-print(ldap.SCOPE_SUBTREE)
+AUTH_LDAP_GROUP_SEARCH = LDAPSearch("dc=skole,dc=skolelinux,dc=no", ldap.SCOPE_SUBTREE,
+                                    "(&(objectClass=posixGroup)(memberUid=%(user)s))")
+# '(&(objectClass=*)(memberUid=%(user)s)')
+#print(ldap.SCOPE_SUBTREE)
 # "(objectClass=organizationalUnit)")
-AUTH_LDAP_GROUP_TYPE = PosixGroupType(name_attr="cn")
+AUTH_LDAP_GROUP_TYPE = PosixGroupType()
 
 # Simple group restrictions
 # AUTH_LDAP_REQUIRE_GROUP = "dc=skole,dc=skolelinux,dc=no"
@@ -186,11 +191,11 @@ AUTH_LDAP_USER_ATTR_MAP = {
     "email": "mail"
 }
 
-# AUTH_LDAP_USER_FLAGS_BY_GROUP = {
-#     "is_active": "cn=active,ou=django,ou=groups,dc=example,dc=com",
-#     "is_staff": "cn=staff,ou=django,ou=groups,dc=example,dc=com",
-#     "is_superuser": "cn=superuser,ou=django,ou=groups,dc=example,dc=com"
-# }
+AUTH_LDAP_USER_FLAGS_BY_GROUP = {
+#      "is_active": "cn=teachers,ou=group,ou=Teachers,dc=skole,dc=skolelinux,dc=no",
+      "is_staff": "cn=schoolapps-admins,ou=group,dc=skole,dc=skolelinux,dc=no",
+      "is_superuser": "cn=schoolapps-admins,ou=group,dc=skole,dc=skolelinux,dc=no",
+}
 
 # This is the default, but I like to be explicit.
 AUTH_LDAP_ALWAYS_UPDATE_USER = True
